plugins {
    id 'me.shedaniel.unified-publishing'
}

def loader = "forge"
def Loader = "Forge"

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    developmentForge.extendsFrom common
}

loom {
    accessWidenerPath = project(":common").file("src/main/resources/${mod_id}.accesswidener")

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }

    interfaceInjection {
        interfaceInjectionSourceSets.add project(':common').sourceSets.main
    }
}

repositories {
    maven {
        name "ModMaven (JEI)"
        url "https://modmaven.dev/"
        content {
            includeGroup "net.darkhax.bookshelf"
            includeGroup "net.darkhax.gamestages"
        }
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    // Loader Dependencies
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // KubeJS
    modImplementation "dev.latvian.mods:kubejs-${loader}:${kubejs_version}"

    // Arch
    modApi "dev.architectury:architectury-${loader}:${architectury_version}"

    // Jade
    modImplementation("curse.maven:${jade_project_id}:${jade_forge_file_id}")

    // JEI Api
    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-${loader}-api:${jei_version}"

    // Jei Impl
    modRuntimeOnly "mezz.jei:jei-${minecraft_version}-${loader}:${jei_version}"

    // Combine Common and Forge
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    bundle(project(path: ":common", configuration: "transformProduction${Loader}")) { transitive false }

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${mixin_extras}"))
    implementation(include("com.github.llamalad7.mixinextras:mixinextras-${loader}:${mixin_extras}"))
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

unifiedPublishing {
    project {
        releaseType = project.upload_type
        gameVersions = [
                project.minecraft_version
        ]
        gameLoaders = ["${loader}"]
        displayName = "$mod_name ${Loader} $project.version"

        mainPublication remapJar

        relations {
            depends {
                curseforge = modrinth = "architectury-api"
            }
            depends {
                curseforge = modrinth = "kubejs"
            }
        }

        if (ENV.CURSEFORGE_KEY) {
            curseforge {
                token = ENV.CURSEFORGE_KEY
                id = project.curseforge_id
            }
        }

        if (ENV.MODRINTH_TOKEN) {
            modrinth {
                token = ENV.MODRINTH_TOKEN
                id = project.modrinth_id
                version = "${mod_id}-${loader}-${mod_version}"
            }
        }
    }
}
