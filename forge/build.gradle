plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
	id 'me.shedaniel.unified-publishing'
}

architectury {
	platformSetupLoomIde()
	forge()
}

configurations {
	common
	shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentForge.extendsFrom common
}

dependencies {
	forge "net.minecraftforge:forge:${rootProject.forge_version}"
	// Remove the next line if you don't want to depend on the API
	modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

	modImplementation("dev.latvian.mods:kubejs-forge:${rootProject.kubejs_version}")
	forgeRuntimeLibrary("org.jsoup:jsoup:1.16.1")
	loom {
		include("org.jsoup:jsoup:1.16.1")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

shadowJar {
	exclude "fabric.mod.json"
	exclude "architectury.common.json"

	configurations = [project.configurations.shadowCommon]
	classifier "dev-shadow"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	classifier null
}

jar {
	classifier "dev"
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

publishing {
	publications {
		mavenForge(MavenPublication) {
			artifactId = rootProject.archives_base_name + "-" + project.name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
	}
}


unifiedPublishing {
	project {
		releaseType = rootProject.artifact_type
		gameVersions = [
				rootProject.minecraft_version
		]
		gameLoaders = ["forge"]
		displayName = "$project.mod_name Forge $project.version"
		mainPublication remapJar

		relations {
			depends {
				curseforge = modrinth = "architectury-api"
			}
			depends {
				curseforge = modrinth = "rhino"
			}
			depends {
				curseforge = modrinth = "kubejs"
			}
		}

		var CF = System.getenv("CURSEFORGE_KEY")
		if (CF != null) {
			curseforge {
				token = CF
				id = project.curseforge_id
			}
		}
		var MT = System.getenv("MODRINTH_TOKEN_BROKEN")
		if (MT != null) {
			modrinth {
				token = mt
				id = project.modrinth_id
				version = "$project.version+$project.name"
			}
		}
	}
}